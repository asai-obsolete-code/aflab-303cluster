#!/bin/bash
#-*- mode:sh -*-

ssh=ssh

PARALLEL=false
SUDO=false
SUDO_PASSWORD=
LUCY=false
PROFILE=false

. $(dirname $(readlink -ef $0))/util/gethosts.sh

while [[ $* != "" ]]
do
    opt=$1
    case $opt in
        -p) PARALLEL=true
            echo "Invoking ssh in parallel." ;;
        -h) HOSTSFILE=$2
            shift
            echo "Using alternative hosts file $HOSTSFILE." ;;
        -s) SUDO=true
            SUDO_PASSWORD=$2
            shift
            echo "Enabling sudo." ;;
        -l) LUCY=true
            echo "Added funlucy to the mapped hosts." ;;
        --) shift
            break ;;
        --*) 
            case $opt in
                --lucy)
                    LUCY=true
                    echo "Added funlucy to the mapped hosts." ;;
                --profile)
                    PROFILE=true;;
                --*) echo "unsupported long option $opt"
                    exit 1;;
            esac ;;
        -*) echo "unsupported short option $opt"
            exit 1 ;;
        * ) break ;;
    esac
    shift
done

acc=

while [[ $# != "0" && $1 != "--" ]]
do
    acc="$acc $1"
    shift
done

if [[ $1 == "--" ]]
then
    shift
    ssh_option="$acc"
    commands=$@
else
    ssh_option=""
    commands="$acc"
fi

hosts=$(cat $HOSTSFILE | sed -e "s/#.*//g")

$LUCY && hosts="funlucy $hosts"
$SUDO && commands="echo $SUDO_PASSWORD | sudo -S -p \"\" -- sh -c \"$commands\""
$PARALLEL && ssh_option="-t $ssh_option"
$PROFILE && ssh="time ssh"

echo "#######################################"

echo "Running command: $commands"
echo "SSH options: $ssh_option"
echo "Final command to run: $ssh $ssh_option -- <host> \"cd $PWD; $commands\""

run (){
    $ssh $ssh_option -- $host "cd $PWD; $commands"
}

# trap definition

handle (){
    echo aborting... killing all subprocesses
    for child in $(pgrep -P $$)
    do
        kill -s $1 $child
    done
    exit
}

for signal in sighup sigtrap sigint sigterm sigxcpu sigabrt
do
    trap "handle $signal" $signal
done

for host in $hosts
do
    echo "logging in to $host..."
    if $PARALLEL
    then
        run &
    else
        run
    fi
done

wait
